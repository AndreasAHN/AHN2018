|code_lock_tester
KEY[2] => code_lock:code_lock_tester.reset
KEY[3] => code_lock:code_lock_tester.enter
SW[0] => code_lock:code_lock_tester.code[0]
SW[0] => sevenseg_decoder:show1.bin[0]
SW[0] => LEDR[0].DATAIN
SW[1] => code_lock:code_lock_tester.code[1]
SW[1] => sevenseg_decoder:show1.bin[1]
SW[1] => LEDR[1].DATAIN
SW[2] => code_lock:code_lock_tester.code[2]
SW[2] => sevenseg_decoder:show1.bin[2]
SW[2] => LEDR[2].DATAIN
SW[3] => code_lock:code_lock_tester.code[3]
SW[3] => sevenseg_decoder:show1.bin[3]
SW[3] => LEDR[3].DATAIN
SW[4] => code_lock:code_lock_tester.code[4]
SW[4] => sevenseg_decoder:show2.bin[0]
SW[4] => LEDR[4].DATAIN
SW[5] => code_lock:code_lock_tester.code[5]
SW[5] => sevenseg_decoder:show2.bin[1]
SW[5] => LEDR[5].DATAIN
SW[6] => code_lock:code_lock_tester.code[6]
SW[6] => sevenseg_decoder:show2.bin[2]
SW[6] => LEDR[6].DATAIN
SW[7] => code_lock:code_lock_tester.code[7]
SW[7] => sevenseg_decoder:show2.bin[3]
SW[7] => LEDR[7].DATAIN
LEDG[0] <= code_lock:code_lock_tester.lock
LEDG[1] <= <GND>
CLOCK_50 => code_lock:code_lock_tester.clk
LEDR[0] <= SW[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= SW[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= SW[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= SW[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= SW[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= SW[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= SW[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= SW[7].DB_MAX_OUTPUT_PORT_TYPE
GPIO_0[0] <= code_lock:code_lock_tester.lock
GPIO_0[1] <= <GND>
HEX0[0] <= sevenseg_decoder:show1.seg[0]
HEX0[1] <= sevenseg_decoder:show1.seg[1]
HEX0[2] <= sevenseg_decoder:show1.seg[2]
HEX0[3] <= sevenseg_decoder:show1.seg[3]
HEX0[4] <= sevenseg_decoder:show1.seg[4]
HEX0[5] <= sevenseg_decoder:show1.seg[5]
HEX0[6] <= sevenseg_decoder:show1.seg[6]
HEX1[0] <= sevenseg_decoder:show2.seg[0]
HEX1[1] <= sevenseg_decoder:show2.seg[1]
HEX1[2] <= sevenseg_decoder:show2.seg[2]
HEX1[3] <= sevenseg_decoder:show2.seg[3]
HEX1[4] <= sevenseg_decoder:show2.seg[4]
HEX1[5] <= sevenseg_decoder:show2.seg[5]
HEX1[6] <= sevenseg_decoder:show2.seg[6]
HEX2[0] <= <VCC>
HEX2[1] <= <VCC>
HEX2[2] <= <VCC>
HEX2[3] <= <VCC>
HEX2[4] <= <VCC>
HEX2[5] <= <VCC>
HEX2[6] <= <VCC>
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
HEX6[0] <= <VCC>
HEX6[1] <= <VCC>
HEX6[2] <= <VCC>
HEX6[3] <= <VCC>
HEX6[4] <= <VCC>
HEX6[5] <= <VCC>
HEX6[6] <= <VCC>
HEX7[0] <= <VCC>
HEX7[1] <= <VCC>
HEX7[2] <= <VCC>
HEX7[3] <= <VCC>
HEX7[4] <= <VCC>
HEX7[5] <= <VCC>
HEX7[6] <= <VCC>


|code_lock_tester|code_lock:code_lock_tester
code[0] => Equal0.IN7
code[1] => Equal0.IN6
code[2] => Equal0.IN1
code[3] => Equal0.IN5
code[4] => Equal0.IN4
code[5] => Equal0.IN3
code[6] => Equal0.IN2
code[7] => Equal0.IN0
reset => present_state~3.DATAIN
enter => nxt_state.IN1
enter => nxt_state.IN1
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
clk => present_state~1.DATAIN
lock <= lock.DB_MAX_OUTPUT_PORT_TYPE
status[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
status[1] <= status[1].DB_MAX_OUTPUT_PORT_TYPE
status[2] <= status[2].DB_MAX_OUTPUT_PORT_TYPE
status[3] <= status[3].DB_MAX_OUTPUT_PORT_TYPE
status[4] <= status[4].DB_MAX_OUTPUT_PORT_TYPE
status[5] <= status[5].DB_MAX_OUTPUT_PORT_TYPE


|code_lock_tester|sevenseg_decoder:show1
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|code_lock_tester|sevenseg_decoder:show2
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


